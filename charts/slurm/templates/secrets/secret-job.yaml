{{- if .Values.syncer.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-secret-job
    app.kubernetes.io/instance: {{ .Release.Name }}-secret-job
    {{- include "slurm.labels" . | nindent 4 }}
  name: {{ .Release.Name }}-secret-job
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-secret-job-role
    app.kubernetes.io/instance: {{ .Release.Name }}-secret-job
    {{- include "slurm.labels" . | nindent 4 }}
  name: {{ .Release.Name }}-secret-job-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-secret-job-rolebinding
    app.kubernetes.io/instance: {{ .Release.Name }}-secret-job
    {{- include "slurm.labels" . | nindent 4 }}
  name: {{ .Release.Name }}-secret-job-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Release.Name }}-secret-job-role
subjects:
- kind: ServiceAccount
  name: {{ .Release.Name }}-secret-job
  namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-secret-job
    app.kubernetes.io/instance: {{ .Release.Name }}-secret-job
    {{- include "slurm.labels" . | nindent 4 }}
  name: {{ .Release.Name }}-secret-job
spec:
  template:
    spec:
      shareProcessNamespace: true
      {{- include "slurm.dnsConfig" . | nindent 6 }}
      enableServiceLinks: false
      initContainers:
      # The initcontainer is needed mostly to persist etc from the image in an emptyDir
      # This way we can modify /etc/passwd and similar via a SSSD sidecar
      - name: init
        image: "{{ .Values.login.image.repository }}:{{ default (print "v" .Chart.Version ) .Values.login.image.tag }}"
        command: ["/usr/share/sunk/bin/init.sh"]
        volumeMounts:
        - name: etc
          mountPath: /runtime/etc
        - name: run
          mountPath: /run
        - name: munge
          mountPath: /munge/munge.secret.key
          subPath: munge.key
          readOnly: true
      containers:
      - name: munged
        {{- include "slurm.mungedContainer" . | nindent 8 }}
      - name: job
        image: "{{ .Values.login.image.repository }}:{{ default (print "v" .Chart.Version ) .Values.login.image.tag }}"
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 200m
            memory: 100Mi
        command: ["/usr/share/sunk/bin/create-syncer-secret.sh", "{{ .Release.Name }}"]
        volumeMounts:
        - mountPath: /dev/shm
          name: dshm
        - name: run
          mountPath: /run
        - name: etc
          mountPath: /etc
      volumes:
      - name: dshm
        emptyDir:
          medium: Memory
      {{- include "slurm.runtimeVolumes" . | nindent 6 }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/region
                operator: In
                values:
                - {{ .Values.nodeSelector.region }}
              - key: cpu.coreweave.cloud/family
                operator: In
                values:
                  - epyc
      serviceAccountName: {{ .Release.Name }}-secret-job
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Never
  backoffLimit: 4
{{- end }}

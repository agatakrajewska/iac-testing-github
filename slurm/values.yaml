nodeSelector:
  region: LAS1 # The region set here is only for the slurm control-plane. Compute nodes should define their own affinities.

directoryService:
  # Negative caching value (in seconds) determins how long an invalid entry will be cached before asking ldap again
  # Improves directory listing time when a primary gid cannot be found
  negativeCacheTimeout: "600"
  # Unix groups allowed for sudo access
  # Group names are not fully-qualified for the default directory; E.G "group1" instead of "group1@domain.com"
  # Group names are fully-qualified for additional directories
  # Sudo Groups for all directories are added here
  sudoGroups: []
  #  - group1
  debugLevel: 0x0200
  directories:
    # Primary domain should always be named "default"
    - name: default
      enabled: true

      # For Google Secure LDAP, use ldaps://ldap.google.com:636
      ldapUri: # ldap://YOUR_LDAP_IP

      # For E.G Google Secure LDAP where bindDn is not required, only supply user.canary - an example user to confirm lookup is working
      user:
        bindDn: # cn=Admin,ou=Users,ou=CORP,dc=corp,dc=example,dc=com
        searchBase: #dc=corp,dc=example,dc=com
        password:
        existingSecret:
        canary: # Admin

      defaultShell: "/bin/bash"
      fallbackHomeDir: "/home/%u"
      overrideHomeDir: # /mnt/nvme/home/%u # Override the homeDirectory attribute from LDAP
      # Existing secret with LDAP-S certificates
      # E.G: kubectl create secret tls ldap-certificate --cert=Google_2025_08_24_55726.crt --key=Google_2025_08_24_55726.key
      ldapsCert: # ldap-certificate

      # For Google Secure LDAP, set schema: rfc2307bis
      schema: AD # AD, POSIX, rfc2307bis

  #- name: google-example.com
  #  enabled: true
  #  ldapUri: ldaps://ldap.google.com:636
  #  user:
  #    canary: user@google-example.com
  #  defaultShell: "/bin/bash"
  #  fallbackHomeDir: "/home/%u"
  #  overrideHomeDir: /mnt/nvme/home/%u
  #  ldapsCert: google-ldaps-cert
  #  schema: rfc2307bis

  #- name: coreweave.cloud
  #  enabled: true
  #  ldapUri: ldap://openldap
  #  user:
  #    bindDn: cn=admin,dc=coreweave,dc=cloud
  #    searchBase: dc=coreweave,dc=cloud
  #    existingSecret: bind-user-sssd-config
  #    canary: admin
  #  defaultShell: "/bin/bash"
  #  fallbackHomeDir: "/home/%u"
  #  schema: rfc2307

  #- name: contoso.com
  #  enabled: true
  #  ldapUri: ldap://domaincontroller.tenant-my-tenant.coreweave.cloud
  #  user:
  #    bindDn: CN=binduser,CN=Users,DC=contoso,DC=com
  #    searchBase: DC=contoso,DC=com
  #    existingSecret: bind-user-sssd-config
  #    canary: binduser
  #  defaultShell: "/bin/bash"
  #  fallbackHomeDir: "/home/%u"
  #  schema: AD

slurmConfig:
  slurmCtld:
    timeout: 60 # The interval, in seconds, that the backup controller waits for the primary controller to respond before assuming control.
    additionalParameters:
      - idle_on_node_suspend
      - node_reg_mem_percent=95
    procTrackType: "proctrack/linuxproc" # proctrack/linuxproc or proctrack/cgroup (Requires special HPC security policy to use, please contact Coreweave support)
    taskPlugin: "task/none" # task/affinity and/or task/cgroups or task/none
    jobSubmitPlugins: # lua
    accountingStorageEnforce: qos,limits
    etcConfigMap: # A ConfigMap with keys mapping to files in /etc/slurm on the controller only. This ConfigMap MUST not contain slurm.conf, plugstack.conf, gres.conf or cgroup.conf

  slurmd:
    timeout: 30 # The interval, in seconds, that the Slurm controller waits for slurmd to respond before configuring that node's state to DOWN.
    suspendTime: INFINITE # Pods which remain idle or down for this amount of time will be deleted

    prologConfigMap: # A ConfigMap with keys mapping to prolog.d scripts
    epilogConfigMap: # A ConfigMap with keys mapping to epilog.d scripts

  inactiveLimit: 0 # The interval, in seconds, after which a non-responsive job allocation command (e.g. srun or salloc) will result in the job being terminated
  killWait: 30 # The interval, in seconds, given to a job's processes between the SIGTERM and SIGKILL signals upon reaching its time limit.
  waitTime: 0 # Specifies how many seconds the srun command should by default wait after the first task terminates before terminating all remaining tasks. The "--wait" option on the srun command line overrides this value. The default value is 0, which disables this feature.
  selectTypeParameters: CR_Core # CR_Core_Memory
  defMemPerCPU: 4096 # The default memory per CPU in megabytes. This value is used when the --mem-per-cpu option is not specified on the srun command line.

  extraConfig: |
    # Freetext config to be appended to slurm.conf
    # Can be multiple lines

network:
  disableK8sNetworking: false
  vpcs: []
  # - name: las1-1

imagePullSecrets: []

jwt:
  existingSecret:

controller:
  replicas: 1
  image:
    repository: registry.gitlab.com/coreweave/sunk/controller
    tag:

  securityContext:
    runAsUser: 401 # Default slurm userid
    runAsGroup: 401
  resources:
    limits:
      cpu: 4
      memory: 16Gi
    requests:
      cpu: 4
      memory: 16Gi
  livenessProbe:
    exec:
      command:
        - sinfo
    failureThreshold: 6
    initialDelaySeconds: 15
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 10

  terminationGracePeriodSeconds: 30
  priorityClassName: normal

rest:
  replicas: 1
  securityContext:
    runAsUser: 401 # Default slurm userid
    runAsGroup: 401
  resources:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 1
      memory: 2Gi

  terminationGracePeriodSeconds: 5
  priorityClassName: normal

syncer:
  image:
    repository: registry.gitlab.com/coreweave/sunk/operator
    tag:
  enabled: true
  logLevel: debug
  nodePermissions:
    enabled: true

accounting:
  enabled: true
  external:
    enabled: false
    host: # 10.0.0.7
    user: # admin
    port: # 6819
  replicas: 1

  securityContext:
    runAsUser: 401 # Default slurm userid
    runAsGroup: 401
  resources:
    limits:
      cpu: 4
      memory: 16Gi
    requests:
      cpu: 4
      memory: 16Gi

  terminationGracePeriodSeconds: 30
  priorityClassName: normal

login:
  replicas: 1
  image:
    repository: registry.gitlab.com/coreweave/sunk/controller-extras
    tag:
  resources:
    limits:
      cpu: 4
      memory: 8Gi
    requests:
      cpu: 4
      memory: 8Gi
  service:
    type: LoadBalancer
    externalTrafficPolicy: Local
    exposePublicIP: false
    annotations: {}

  terminationGracePeriodSeconds: 30
  priorityClassName: normal

compute:
  # Use dynamic nodes (false uses cloud nodes)
  dynamic: false
  s6: {}
  #    packages:
  #      type: oneshot
  #      script: |
  #        #!/usr/bin/env bash
  #        apt -y install nginx
  #    nginx:
  #      type: longrun
  #      script: |
  #        #!/usr/bin/env bash
  #        nginx -g "daemon off;"
  ssh:
    enabled: false

  mounts: []
  #- name: mount-name
  #  pvc: pvc-name

  partitions: |
    PartitionName=all Nodes=ALL Default=YES MaxTime=INFINITE State=UP

  autoPartition:
    enabled: true

  pyxis:
    enabled: false
    mountHome: true # ENROOT_MOUNT_HOME
    remapRoot: true # ENROOT_REMAP_ROOT

  #  securityContext:
  #    capabilities:
  #      add: ["SYS_NICE"] # Add "SYS_ADMIN" for pyxis/enroot image pull support
  nodes:
    rtx4000-cu117:
      definitions:
        - rtx4000
        - cu117
        - las1

    a100-cu117:
      definitions:
        - a100
        - cu117
        - las1
        - ipoib

    a100-cu118:
      definitions:
        - a100
        - cu118
        - las1
        - ipoib

    a100-cu120:
      definitions:
        - a100
        - cu120
        - las1
        - ipoib

    a100-nemo:
      definitions:
        - a100
        - nemo
        - las1
        - ipoib

    a100-pytorch-ngc:
      definitions:
        - a100
        - pytorch-ngc
        - las1
        - ipoib

    h100-cu120:
      definitions:
        - h100
        - cu120
        - las1
        - ipoib

    a40-cu117:
      definitions:
        - a40
        - cu117
        - las1

    cpu-epyc:
      definitions:
        - epyc
        - standard
        - las1

    a4000-cu117:
      definitions:
        - a4000
        - cu117
        - las1

    rtx5000-cu117:
      definitions:
        - rtx5000
        - cu117
        - las1

    a5000-cu117:
      definitions:
        - a5000
        - cu117
        - las1

metrics:
  replicas: 1
  image:
    repository: registry.gitlab.com/coreweave/sunk/prometheus-slurm-exporter
    tag:

  resources:
    limits:
      cpu: 1
      memory: 4Gi
    requests:
      cpu: 1
      memory: 4Gi

  terminationGracePeriodSeconds: 30
  priorityClassName: normal

munge:
  # existingSecret: my-secret

  resources:
    limits:
      cpu: 1
      memory: 2Gi

mysql:
  enabled: true
  auth:
    username: coreweave
    database: slurm_acct_db
    existingSecret: "{{ .Release.Name }}-mysql"
  primary:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: topology.kubernetes.io/region
                  operator: In
                  values:
                    - LAS1
    startupProbe:
      failureThreshold: 30
    persistence:
      size: 8Gi
      storageClass: block-nvme-las1
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
    service:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9104"
  resources:
    requests:
      memory: 4Gi
      cpu: 2
    limits:
      memory: 4Gi
      cpu: 2
